---
title: "index"
subtitle: "ESS 330 - Lab 3 - COVID-19"
author: 
  - name: "Cameron McLaughlin"
format: html
execute:
  echo: true
output-dir: docs
---

# Lab 03 Covid


```{r}
#load packages
library(tidyverse)
library(flextable)
library(zoo)
library(readr)
library(lubridate)
library(dplyr)
library(maps)
library(patchwork)
```

## Question 1
fig.path="figures/"
```{r}
#Question1- Read csv from webpage
covid_raw <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")

```

## Question 2

```{r}
#Question 2-my date object
txt <- "2022-02-01"
class(txt)
date_example <- as.Date(txt)
class(date_example)

my.date <- as.Date("2022-02-01")
my.state <- "Colorado"
class(my.date)
```

```{r}
#-leave raw data, start cleaning

#clean covid raw
covid_raw <- covid_raw %>% 
  na.omit()

#colorado dataframe with new cases and new deaths
covid_data_CO <- covid_raw %>%
  filter(state == "Colorado") %>%
  group_by(county, fips) %>%
  arrange(date) %>%
  mutate(new_cases = cases - lag(cases),
         new_deaths = deaths - lag(deaths)) %>% ungroup()

#clean covid_data_co
covid_data_CO <- covid_data_CO %>% 
  na.omit()


#top 5 counties with most cumulative cases

covid_data_CO %>% 
  filter(date == my.date)  %>%
  slice_max(cases, n = 5) %>%
  select(Date = date, County = county, 'Cumulative Cases' = cases) %>%
  flextable()  %>%
  add_header_lines(paste0("Top 5 Counties by Cumulative Cases on ", my.date))

#top 5 counties with most new cases
covid_data_CO %>% 
  filter(date == my.date)  %>%
  slice_max(new_cases, n = 5) %>%
  select(Date = date, County = county, `New Cases` = new_cases) %>%
  flextable()  %>%
  add_header_lines(paste0("Top 5 Counties by New Cases on ", my.date))
```

## Question 3

```{r}

#Question 3: Normalizing Data
pop_raw <- read_csv('https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv') %>%
  mutate(
    STATE = sprintf("%02d", as.numeric(STATE)),
    COUNTY = sprintf("%03d", as.numeric(COUNTY)),
    fips = paste0(STATE, COUNTY)
  ) %>%
  select(fips, contains("NAME"), contains("2021"), DEATHS2021) %>%
  filter(str_sub(fips, 3, 5) != "000")

names(pop_raw)
dim(pop_raw)
glimpse(pop_raw)

colorado_pop2021 <- pop_raw %>%
  filter(STNAME == "Colorado") %>%
  select(STNAME, POPESTIMATE2021, fips)

range(colorado_pop2021$POPESTIMATE2021)

combined_data <- covid_data_CO %>%
  inner_join(colorado_pop2021, by = "fips") %>%
  mutate(
    per_capita_cumulative_cases = cases / POPESTIMATE2021,
    per_capita_new_cases = new_cases / POPESTIMATE2021,
    per_capita_new_deaths = new_deaths / POPESTIMATE2021)

#top 5 counties with the most cumulative cases
combined_data %>% 
  filter(date == my.date)  %>%
  slice_max(per_capita_cumulative_cases, n = 5) %>%
  select(Date = date, County = county, `Per Capita Cumulative Cases` = per_capita_cumulative_cases) %>%
  flextable()  %>%
  add_header_lines(paste0("Top Counties by Per Capita Cumulative Cases on ", my.date))

#top 5 counties with most new cases per cap
combined_data %>% 
  filter(date == my.date)  %>%
  slice_max(per_capita_new_cases, n = 5) %>%
  select(Date = date, County = county, `Per Capita New Cases` = per_capita_new_cases) %>%
  flextable()  %>%
  add_header_lines(paste0("Top Counties by Per Capita New Cases on ", my.date))
```

Part 3: The range for CO counties populations in 2022 was 741 to 737,287.

## Question 4

```{r}
#Question 4: Rolling Thresholds

#step 1-Filter data to last 14 days
max_date <- max(combined_data$date, na.rm = TRUE)
covid_last14 <- combined_data %>%
  filter(date >= (max_date - 13) & date <= max_date)

#Calc total new cases/100,000 people over last 14
last14_casesummary <- covid_last14 %>%
  group_by(fips, county, POPESTIMATE2021) %>%
  summarize(
    total_new_cases = sum(new_cases, na.rm = TRUE), .groups = "drop") %>% 
  mutate(new_cases_per_100k = (total_new_cases / POPESTIMATE2021) * 100000)

#make table
top5_counties <- last14_casesummary %>%
  slice_max(new_cases_per_100k, n = 5) %>%
  select(County = county,
         `Total New Cases` = total_new_cases,
         `New Cases per 100k` = new_cases_per_100k)

top5_counties %>%
  flextable() %>%
  add_header_lines("Top 5 Colorado Counties by New Cases per 100,000 in the Last 14 Days")

#count exceptions
watchlist_count <- last14_casesummary %>%
  filter(new_cases_per_100k > 100) %>% nrow()

print(watchlist_count)

```

There were 53 counties that exceeded this watchlist parameter: “More than 100 new cases per 100,000 residents over the past 14 days”.

## Question 5

```{r}
#Question 5: Death Toll

my.date = as.Date("2022-02-01")
lubridate::year(my.date)
lubridate::month(my.date)
lubridate::yday(my.date)

covid_deaths_2021 <- combined_data %>%
  filter(date >= as.Date("2021-01-01") & date <= as.Date("2021-12-31")) %>% group_by(fips, county) %>%
  summarize(total_covid_deaths_2021 = sum(new_deaths, na.rm = TRUE), .groups = "drop")

deaths_ratio <- covid_deaths_2021 %>%
  inner_join(pop_raw %>% select(fips, DEATHS2021), by = "fips") %>%
  mutate(covid_death_ratio = (total_covid_deaths_2021 / DEATHS2021) * 100)
         
high_ratio_counties <- deaths_ratio %>%
  filter(covid_death_ratio >= 20)

ggplot(high_ratio_counties, aes(x = reorder(county, covid_death_ratio), y = covid_death_ratio)) +
  geom_col(fill = "tomato") +
  coord_flip() + labs(title = "Colorado Counties with ≥ 20% COVID-19 Deaths in 2021",
    x = "County",
    y = "COVID Deaths (% of Total 2021 Deaths)") + theme_minimal()

```

## Question 6

```{r}
#Question 6- Multi state
#given
states_daily_cases <- covid_raw %>%
  group_by(date, state) %>% 
  summarise(cases = sum(cases)) %>% 
   filter(state %in% c("New York", "Colorado", "Alabama", "Ohio")) %>%
  group_by(state) %>% 
  mutate(new_cases = cases - lag(cases),
         roll = zoo::rollmean(new_cases, k = 7, align = "right", fill = NA)) %>% ungroup()

ggplot(states_daily_cases, aes(x = date)) +
  geom_col(aes(y = new_cases), fill = "pink", col = NA) +
  geom_line(aes(y = roll), col = "darkred", size = 1) +
  theme_linedraw() +
  facet_wrap(~state, nrow = 2, scales = "free_y") +
  labs(title = "Cumulative COVID Cases", x = "Date", y = "Case Count")

#part 2
pp = pop_raw %>% 
  group_by(STNAME) |>
  summarise(state_pop = sum(POPESTIMATE2021)) |>
  inner_join(states_daily_cases, by = c("STNAME" = "state")) %>% 
  mutate(perCap = new_cases / state_pop) %>% 
  group_by(STNAME) %>% 
  mutate(roll = zoo::rollmean(perCap, k = 7, align = "right",
  fill = NA)) %>% 
  ungroup()

ggplot(pp, aes(x = date)) +
  geom_line(aes(y = roll, col = STNAME), size = 1) +
  theme_linedraw() +
  labs(title = "Cumulative COVID Cases",
       x = "Date", y = "Case Count")

```

Scaling the axis by population results in a better comparison. Without this element, we are comparing small states to big states without regard to their population density, which strongly impacts the number of cases they have. In this way, scaling by population keeps us from comparing "apples to oranges". Before scaling by population, Alabama and New York could be compared, and it would look like Alabama is better than NY, because NY has more overall cases. Scaling by population makes New York look better than Alabama because Alabama's smaller population results in its per capita cases being higher (due to scaling by pop.) In this way, you get a more honest representation by scaling based off of population.




## Question 7

```{r}
#Space/Time
#given
#county data

meta = read_csv('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv') %>% 
  inner_join(covid_raw) %>% 
  group_by(date) %>% 
  summarise(wmX_c = sum(LON*cases) / sum(cases),
  wmY_c = sum(LAT*cases) / sum(cases),
  cases = sum(cases)) %>% 
  arrange(date) |>
  mutate(d = 1:n())

P_cases <- ggplot(meta) +
  borders("state", fill = "gray90", colour = "white") +
  geom_point(aes(x = wmX_c, y = wmY_c, size = cases), color = "red", alpha = .25) +
  theme_linedraw() +
  labs(color = "Time",
  size = "Cases",
  x = "", y = "",
  title = "Weighted Mean Center of COVID Cases") +
  theme(legend.position = "none")
print(P_cases)
```
We can see based on this map of COVID cases that the WMC origination point of covid was closer to Missouri, but the COVID outbreak hit the east coast hard, resulting in the WMC moving to the north east towards population centers on the east coast. After this, we can see a movement west, which was likely cuased by the spread of covid to the west coast, and especially California, where this population center moved the mean towards this side of the US. 

## Question 8 (EC)

```{r}
#8-
meta_deaths = read_csv('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv') %>% 
  inner_join(covid_raw) %>% 
  group_by(date) %>% 
  summarise(wmX_d = sum(LON*deaths) / sum(deaths),
  wmY_d = sum(LAT*deaths) / sum(deaths),
  deaths = sum(deaths)) %>% 
  arrange(date) |>
  mutate(d = 1:n())

P_deaths <- ggplot(meta_deaths) +
  borders("state", fill = "gray90", colour = "white") +
  geom_point(aes(x = wmX_d, y = wmY_d, size = deaths), color = "navy", alpha = .25) +
  theme_linedraw() +
  labs(color = "Time",
  size = "Deaths",
  x = "", y = "",
  title = "Weighted Mean Center of COVID Deaths") +
  theme(legend.position = "none")

library("patchwork")
print(P_deaths | P_cases)
```
We can see that Deathsa and Cases for COVID tracked very similarly, but deaths moved further North after trending to the East coast, as compared to Cases. This movement towards North-Western US can likely be explained by the overhwelming of hospitals and treatment locations on the west coast during the outbreak. Additionally, the deaths move further north than cases, which can also be explained as a likely representation of later deaths continuing to affect the north-western US states due to lesser restrictions as well as access to healthcare for patients of COVID. 
